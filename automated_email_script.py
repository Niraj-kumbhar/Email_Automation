"""
Github: Niraj-kumbhar
------------------------
Script to send multiple emails with different/same attachments.
You can change subject, body of mail.
Provide recieptents list and data to attach in mail.

If you want to change or improve this script please create new branch and raise merge request.
"""

from email.mime.application import MIMEApplication
from email.policy import default
import smtplib
from email.mime.multipart import MIMEMultipart
from email.mime.text import MIMEText
from email.mime.base import MIMEBase
from email import encoders
import pandas as pd
from datetime import datetime

start = datetime.now()


def attachment_file(filename):
    # open the file to be sent 
    attachment = open(f'data/{filename}.{file_exten}', "rb")
    return attachment

# read email_configs
config = {}
with open('email_config/config.txt','r') as f:
    for line in f:
        line = line.strip()
        name, var=line.partition("=")[::2]
        config[name.strip()] = str(var).strip()

#set email_configs
file_exten = config['file_extension'] # file extension
isConstant = True if config['Do you want to send one common file for all email(y/n)'] == 'y' else False # is constant file there
constant_att = config['that_common_filename'] #if any constant attachment is there for all mails
subject = config['Email_Subject'] # set subject
body = open('email_config/body.txt','r').read() #change body
# read Receiptents emails
df = pd.read_csv('email_config/email_data.csv') # change if recieptent data file name is different
range_ = df.shape[0]

# read security.txt
security = {}
with open('security/security.txt','r') as f:
    for line in f:
        line = line.strip()
        name, var=line.partition("=")[::2]
        security[name.strip()] = str(var).strip()
# set security
sender = security['Sender_email'] # change if sender file name is different
pass_key = security['AppPasscode']


 

logs = [] 

for i in range(range_):

    try:

        toaddr = df.Email[i] 
        
        msg = MIMEMultipart() 
        msg['From'] = sender 
        msg['To'] =  toaddr
        #fname = df.Name[i].split()[0]   #for future use : extracts recievers name

        msg['Subject'] = subject

        msg.attach(MIMEText(body, 'html')) # attach the body with the msg instance


        # instance of MIMEBase and named as p
        p = MIMEBase('application', 'octet-stream')

        filename = df.Name[i]
        attachment = attachment_file(filename)  # add file name
        
        #attach = MIMEApplication(attachment, _subtype="pdf")
        
        p.set_payload((attachment).read()) # To change the payload into encoded form
        encoders.encode_base64(p) # encode into base64
        
        p.add_header('Content-Disposition', f"attachment; filename= {filename}.{file_exten}")
        msg.attach(p)    # attach the instance 'p' to instance 'msg'

        # attaching constant file
        if isConstant:
            p = MIMEBase('application', 'octet-stream')
            cons = open(f'data/{constant_att}.{file_exten}','rb')
            p.set_payload((cons).read())
            encoders.encode_base64(p) # encode into base64
            p.add_header(f'Content-Disposition', f"attachment; filename= {constant_att}.{file_exten}")
            msg.attach(p)
        
        # creates SMTP session
        s = smtplib.SMTP('smtp.gmail.com', 587)
        

        s.starttls()
        s.login(sender, pass_key) # Authentication of sender, generated by app password
        text = msg.as_string()
        s.sendmail(sender, toaddr, text) 
        s.quit() # terminating the session
        logs.append(1)

    except Exception as e:
        print(e)
        logs.append(0)
        continue

    finally:
        print(f'{i+1} Completed: {df.Name[i]}')


time_ = datetime.now() - start
print('\n','*'*20,'\n')
print(f'time taken: {time_}')
logs_ = pd.DataFrame(list(zip(df.Email,df.Name,logs)),columns=['Email','Name','Status'])
logs_.to_csv('logs.csv')

